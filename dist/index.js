var vueIsIntersecting=function(a){'use strict';var b=new WeakMap,c=new WeakMap,d=new WeakMap,e={handlers:new WeakMap,instant:new WeakMap,uniques:new WeakMap,callbacks:new WeakMap,current:new WeakMap},f=function(a,b){b.get(a)&&(clearTimeout(b.get(a)),b.delete(a))},g=function(a,c){c.unobserve(a),f(a,b)},h=function(a,b){var c=e.uniques.get(a),f=e.callbacks.get(a),h=e.handlers.get(a),i=e.current.get(a);b&&!d.get(a)&&d.set(a,!0),i?h[b?0:1](a,f):h(a,f),c&&b&&g(a,b)},i=function(a,d,e){var g=a?c:b;g.set(d,setTimeout(function(){h(d,e),f(d,g)},500))},j=new IntersectionObserver(function(a,g){a.forEach(function(a){var j=e.instant.get(a.target);if(!a.isIntersecting){if(d.get(a.target)){if(j&&h(a.target),c.get(a.target)||j)return;i(!0,a.target)}return void f(a.target,b)}j&&h(a.target,g),b.get(a.target)||j||i(!1,a.target,g)})}),k=function(a,b){e.callbacks.set(a,b.arg),e.instant.set(a,b.modifiers.instant),e.uniques.set(a,b.modifiers.unique),e.current.set(a,b.modifiers.current),e.handlers.set(a,b.value)},l=function(a){e.callbacks.delete(a),e.instant.delete(a),e.uniques.delete(a),e.current.delete(a),e.handlers.delete(a),b.delete(a),c.delete(a),d.delete(a)},m={bind:function(a,b){k(a,b),j.observe(a)},unbind:function(a){l(a),j.unobserve(a)}};return a.default={install:function(a){a.directive("is-intersecting",m)}},Object.defineProperty(a,"__esModule",{value:!0}),a}({});
